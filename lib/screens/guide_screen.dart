import 'package:flutter/material.dart';

class GuideScreen extends StatelessWidget {
  const GuideScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final Map<String, dynamic>? spot =
        ModalRoute.of(context)?.settings.arguments as Map<String, dynamic>?;

    final String spotName = spot?['name'] ?? 'Ìè¨ÌÜ†Ïä§Ìåü';
    final String tip;
    if (spotName == 'ÏïÑÎùºÏø†ÎùºÏïºÎßàÏÑºÍ≤êÍ≥µÏõê') {
      tip =
          "‚úîÔ∏è ${spotName}ÏóêÏÑú Ïù∏ÏÉùÏÉ∑ÏùÑ Ï∞çÎäî ÌåÅ!\n\n"
          "1. Ï†ÑÎßùÎåÄÏùò ÏôºÏ™ΩÏúºÎ°ú Ïù¥ÎèôÌï¥ ÌÉëÏùÑ Ïò§Î•∏Ï™Ω ÌîÑÎ†àÏûÑÏóê Î∞∞Ïπò\n"
          "2. Ï†ÑÍ≤Ω: Î≤öÍΩÉ / Ï§ëÍ≤Ω: ÌååÍ≥†Îã§ / Î∞∞Í≤Ω: ÌõÑÏßÄÏÇ∞ Íµ¨ÎèÑÎ°ú Íµ¨ÏÑ±  \n"
          "3. 35~50mm ÌôîÍ∞Å Î†åÏ¶à ÏÇ¨Ïö© Ïãú ÏóΩÏÑú ÎäêÎÇå Ïó∞Ï∂ú Í∞ÄÎä•\n\n\n"
          "‚òÄÏ∂îÏ≤ú ÏãúÍ∞Ñ & ÎÇ†Ïî®\n"
          "- ÎßëÏùÄ ÎÇ†: Ïò§Ï†Ñ 8~10Ïãú, ÏÑ†Î™ÖÌïú ÏÉâ ÎåÄÎπÑ\n"
          "- ÌùêÎ¶∞ ÎÇ†: ÏïàÍ∞ú ÎÇÄ ÌõÑÏßÄÏÇ∞Í≥º ÌååÍ≥†Îã§Î°ú Î™ΩÌôòÏ†ÅÏù∏ Î∂ÑÏúÑÍ∏∞\n"
          "- Î≤öÍΩÉ ÏãúÏ¶å: Î≤öÍΩÉ ÌîÑÎ†àÏûÑÏúºÎ°ú Í≥ÑÏ†àÍ∞ê Í∞ïÏ°∞\n"
          "- Ìï¥Ïßà Î¨¥Î†µ: Ìô©Í∏àÎπõ ÌõÑÏßÄÏÇ∞ + Î∂âÏùÄ ÌÉëÏùò ÎìúÎùºÎßàÌã±Ìïú Ï°∞Ìôî\n";
    } else if (spotName == 'ÏãúÎ™®ÏöîÏãúÎã§ÌòºÏ¥àÍ±∞Î¶¨') {
      tip =
      "‚úîÔ∏è ${spotName}ÏóêÏÑú Ïù∏ÏÉùÏÉ∑ÏùÑ Ï∞çÎäî ÌåÅ!\n\n"
          "1. ÎèÑÎ°ú Ï§ëÏïôÏÑ†Ïóê ÎßûÏ∂∞ Ï†ïÎ©¥ Ï¥¨ÏòÅÌïòÎ©¥ Ï¢åÏö∞ ÎåÄÏπ≠Ïùò Í∞ÄÎ°úÎì±Í≥º ÌõÑÏßÄÏÇ∞Ïù¥ ÏûêÏó∞Ïä§ÎüΩÍ≤å Ïù¥Ïñ¥ÏßÄÎäî Íµ¨ÎèÑ ÏôÑÏÑ±\n"
          "2. Ìö°Îã®Î≥¥ÎèÑ ÏßÅÏ†Ñ Ï§ëÏïô ÏßÄÏ†êÏù¥ Î≤†Ïä§Ìä∏ Ìè¨Ïù∏Ìä∏\n"
          "3. Í¥ëÍ∞Å ÎòêÎäî 35~50mm ÌôîÍ∞Å Î†åÏ¶à ÏÇ¨Ïö© Ï∂îÏ≤ú\n"
          "\n\n"
          "‚òÄÏ∂îÏ≤ú ÏãúÍ∞Ñ & ÎÇ†Ïî®\n"
          "- ÎßëÏùÄ ÎÇ†: ÏùºÏ∂ú ÏßÅÌõÑ or ÏùºÎ™∞ ÏßÅÏ†Ñ ÌïòÎäòÍ≥º ÌõÑÏßÄÏÇ∞Ïùò Ï°∞Ìôî\n"
          "- ÌùêÎ¶∞ ÎÇ†: ÌõÑÏßÄÏÇ∞Ïù¥ Ïïà Î≥¥Ïùº Îïê ÏÉÅÏ†êÍ∞ÄÏôÄ Ïù∏Î¨º Ï§ëÏã¨ÏúºÎ°ú\n"
          "- ÎπÑ Ïò§Îäî ÎÇ†: Ï†ñÏùÄ ÎèÑÎ°úÏóê Î∞òÏÇ¨Îêú ÎπõÏúºÎ°ú Í∞êÏÑ±Ï†ÅÏù∏ Î∂ÑÏúÑÍ∏∞\n"
          "- Îàà Ïò§Îäî ÎÇ†: ÏßÄÎ∂ï ÏúÑ Îàà + ÏÑ§ÏÇ∞ ÌõÑÏßÄÏÇ∞ Ï°∞Ìï©ÏúºÎ°ú ÎìúÎùºÎßàÌã±\n"
          "- Ìï¥ Ïßà Î¨¥Î†µ: Í∞ÄÎ°úÎì± Ï∞®Îüâ Î∂àÎπõ ÌõÑÏßÄÏÇ∞ Ïã§Î£®Ïó£Ïù¥ Ïñ¥Ïö∞Îü¨ÏßÑ Î°úÎß®Ìã± ÏïºÍ≤Ω\n";
    }else if (spotName == 'ÎåÄÏ†ÑÏó≠') {
      tip =
          "‚úîÔ∏è ${spotName}ÏóêÏÑú Ïù∏ÏÉùÏÉ∑ÏùÑ Ï∞çÎäî ÌåÅ!\n\n"
          "1. ÎåÄÏ†ÑÏó≠ ÏÑúÍ¥ëÏû• Ï†ïÎ©¥ÏóêÏÑú 'ÎåÄÏ†ÑÏó≠' Í∞ÑÌåêÏù¥ Ïûò Î≥¥Ïù¥Í≤å Ï¥¨ÏòÅ\n"
          "2. Í∞ÑÌåê Í∏∞Ï§Ä 2~3m ÏïûÏóê ÏÑúÏÑú 'ÎåÄ' Í∏ÄÏûêÍ∞Ä Î®∏Î¶¨ ÏúÑÏóê Ïò§ÎèÑÎ°ù ÏïµÍ∏Ä ÎßûÏ∂îÍ∏∞\n"
          "3. Ïä§ÎßàÌä∏Ìè∞ÏùÑ ÏïÑÎûòÏóêÏÑú ÏúÑÎ°ú Ïò¨Î†§ Ï∞çÏúºÎ©¥ Ïù∏Î¨ºÏù¥ Îçî ÌÅ¨Í≤å ÎÇòÏôÄÏöî\n"
          "\n\n"
          "üéñÎ≥¥ÎÑàÏä§ ÌåÅ\n"
          "- Ï†ÑÏó≠Ìã∞ or Íµ∞Î≥µ + Î™®Ïûê Ï∞©Ïö© Ï∂îÏ≤ú\n"
          "- ÏÇºÍ∞ÅÎåÄÎÇò ÏπúÍµ¨ ÎèÑÏõÄÏúºÎ°ú Ïù∏Î¨º Ï§ëÏã¨ Ï¥¨ÏòÅ\n"
          "- Live Photo ÎòêÎäî Ïó∞ÏÇ¨ Î™®ÎìúÎ°ú Î≤†Ïä§Ìä∏Ïª∑ ÏÑ†ÌÉù\n";
    } else {
      tip =
          "‚úîÔ∏è ${spotName}ÏóêÏÑú Ïù∏ÏÉùÏÉ∑ÏùÑ Ï∞çÎäî ÌåÅ!\n\n"
          "1. Ïù∏Î¨ºÏùÄ Î∞∞Í≤ΩÎ≥¥Îã§ 1~2ÎØ∏ÌÑ∞ ÏïûÏóê Î∞∞ÏπòÌï¥Î≥¥ÏÑ∏Ïöî.\n"
          "2. ÎπõÏùÑ Îì±ÏßÄÏßÄ ÏïäÎèÑÎ°ù Ï£ºÏùòÌïòÍ≥†, ÏàúÍ¥ëÎ≥¥Îã® Ï∏°Í¥ëÏúºÎ°ú!\n"
          "3. Í∞ÄÎ°ú ÌîÑÎ†àÏûÑÎ≥¥Îã§Îäî ÏÑ∏Î°ú ÌîÑÎ†àÏûÑÏúºÎ°ú Ïù∏Î¨º Í∞ïÏ°∞!\n"
          "4. Î∞ùÏùÄ ÎÇ†Ïóî ÎÖ∏Ï∂úÏùÑ -1Î°ú ÏÇ¥Ïßù ÎÇÆÏ∂∞Ï£ºÎ©¥ Ï¢ãÏïÑÏöî.";
    }
    return Scaffold(
      appBar: AppBar(title: const Text("Ï¥¨ÏòÅ Í∞ÄÏù¥Îìú")),
      body: Padding(
        padding: const EdgeInsets.all(24),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              "üì∏ $spotName",
              style: const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 16),
            Text(tip, style: const TextStyle(fontSize: 16, height: 1.6)),
            const Spacer(),

            // Î≤ÑÌäº ÏòÅÏó≠
            SafeArea(
              child: Row(
                children: [
                  Expanded(
                    child: OutlinedButton.icon(
                      icon: const Icon(Icons.arrow_back),
                      onPressed: () => Navigator.pop(context),
                      label: const Text("Ïù¥Ï†ÑÏúºÎ°ú"),
                      style: OutlinedButton.styleFrom(
                        padding: const EdgeInsets.symmetric(vertical: 14),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                      ),
                    ),
                  ),
                  const SizedBox(width: 12),
                  Expanded(
                    child: ElevatedButton.icon(
                      icon: const Icon(Icons.camera_alt),
                      onPressed:
                          () => Navigator.pushNamed(
                            context,
                            '/camera',
                            arguments: spot,
                          ),
                      label: const Text("ÏÇ¨ÏßÑ Ï¥¨ÏòÅ"),
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.blueAccent,
                        padding: const EdgeInsets.symmetric(vertical: 14),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                        foregroundColor: Colors.white,
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
